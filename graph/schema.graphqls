# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar DateTime
scalar JWT

type TaskList {
  id: ID!
  users: [ID!]!
  name: String!
  tasks: [TodoStub!]!
}

type TaskListStub {
  id: ID!

}

type TodoStub {
  id: ID!
  name: String!
  list: ID!
  completedAt: DateTime
}

type Todo {
  id: ID!
  name: String!
  description: String
  createdAt: DateTime!
  modifiedAt: DateTime!
  completedAt: DateTime
  list: ID!
  dependsOnThis: [TodoStub!]!
  thisDependsOn: [TodoStub!]!
}

type User {
  id: ID!
  name: String!
  lists: [ID!]!
}

input UserAuth {
  name: String!
  password: String!
}

type Query {
  todos(list: ID!): TaskList!
  lists: [ID!]
  getTodo(id: ID!): Todo
  checkDependencyTodo(dependent: ID!, dependsOn: ID!): Boolean
}

input NewTodo {
  name: String!
  list: ID!
}

type Mutation {
#  createList(input: String!): TaskList
#  addUsersToList(listName: String!, users: [ID!]!): TaskList
#  removeUsersFromList(listName: String!, users: [ID!]!): TaskList
  addDependencyTodo(dependent: ID!, dependsOn: ID!): [Todo!]
  removeDependencyTodo(dependent: ID!, dependsOn: ID!): Boolean
  createTodo(input: NewTodo!): Todo
  renameTodo(id: ID!, newName: String!): Todo
  deleteTodo(id: ID!): Boolean
  markCompletedTodo(id: ID!): Todo
  createUser(user: UserAuth!): User!
  signIn(user: UserAuth!): JWT
}
